name: Docker Image CI
on:
    push:
        branches:
            - main

jobs:
    build:
        runs-on: ubuntu-latest
        environment: prod

        steps:
            - name: checkout all the submodules
              uses: actions/checkout@v2
              with:
                  submodules: recursive
            - name: Run npm install
              run: npm install

            - name: Run build script
              run: npm run build
            - name: Install doctl
              run: |
                  curl -L https://github.com/digitalocean/doctl/releases/download/v1.64.0/doctl-1.64.0-linux-amd64.tar.gz | tar xvz
                  sudo mv doctl /usr/local/bin
            - name: Authenticate doctl
              run: doctl auth init --access-token ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
            - name: Login to DigitalOcean Container Registry
              run: doctl registry login
            - name: Set env vars
              run: |
                  touch .env
                  echo "AUTH_FACEBOOK_ID=${{ secrets.AUTH_FACEBOOK_ID }}" >> .env
                  echo "AUTH_FACEBOOK_SECRET=${{ secrets.AUTH_FACEBOOK_SECRET }}" >> .env
                  echo "AUTH_GOOGLE_ID=${{ secrets.AUTH_GOOGLE_ID }}" >> .env
                  echo "AUTH_GOOGLE_SECRET=${{ secrets.AUTH_GOOGLE_SECRET }}" >> .env
                  echo "AUTH_SECRET=${{ secrets.AUTH_SECRET }}" >> .env
                  echo "AUTH_URL=${{ secrets.NEXTAUTH_URL }}" >> .env
                  echo "NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}" >> .env
                  echo "NEXTAUTH_URL_INTERNAL=${{ secrets.NEXTAUTH_URL_INTERNAL }}" >> .env
                  echo "AUTH_REDIRECT_PROXY_URL=${{ secrets.AUTH_REDIRECT_PROXY_URL }}" >> .env
            - name: Build the Docker image
              run: docker compose -f tools/docker/docker-compose.ci-build.yml build
            - name: Tag and push Docker image
              run: |
                  docker tag portfolio-frontend-proxy registry.digitalocean.com/${{ vars.DOCKER_REGISTRY }}/portfolio-frontend-proxy:latest
                  docker push registry.digitalocean.com/${{ vars.DOCKER_REGISTRY }}/portfolio-frontend-proxy:latest
                  docker tag portfolio-frontend registry.digitalocean.com/${{ vars.DOCKER_REGISTRY }}/portfolio-frontend:latest
                  docker push registry.digitalocean.com/${{ vars.DOCKER_REGISTRY }}/portfolio-frontend:latest
            - name: Install ssh keys
              run: |
                  install -m 600 -D /dev/null ~/.ssh/id_ed25519
                  echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_ed25519
                  ssh-keyscan -H "${{ secrets.SSH_HOST }}" >> ~/.ssh/known_hosts
            - name: Upload file to server
              run: |
                  scp -i ~/.ssh/id_ed25519 ${{ github.workspace }}/tools/docker/docker-compose-cloud.yml ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/
            - name: Connect, pull & run the latest image
              run: |
                  ssh -i ~/.ssh/id_ed25519 ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} '
                  sudo apt-get purge docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin docker-ce-rootless-extras -y
                  curl -fsSL https://get.docker.com -o get-docker.sh 
                  sudo sh get-docker.sh
                  echo 'DOCKER_REGISTRY="${{ vars.DOCKER_REGISTRY }}"' | sudo tee -a /etc/environment &&
                  sudo doctl auth init --access-token ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} && 
                  sudo doctl registry login &&
                  sudo docker compose -f docker-compose-cloud.yml pull &&
                  sudo docker compose -f docker-compose-cloud.yml up -d --force-recreate
                  sudo docker system prune -a -f'
            - name: clean up
              run: rm -rf ~/.ssh
